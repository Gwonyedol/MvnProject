<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- //게시물 개수 public int getCount(String field, String query) throws ClassNotFoundException, 
	SQLException; //전체 게시물 public List<Notice> getNotices(int page, String field, 
	String query) throws ClassNotFoundException, SQLException; //게시물 삭제 public 
	int delete(String seq) throws ClassNotFoundException, SQLException; //게시물 
	수정 public int update(Notice notice) throws ClassNotFoundException, SQLException; 
	//게시물 상세 public Notice getNotice(String seq) throws ClassNotFoundException, 
	SQLException; //게시물 입력 public int insert(Notice n) throws ClassNotFoundException, 
	SQLException; -->
<mapper namespace="dao.NoticeDao">
	<!-- parameter 1 개 (생략) >> parameterType="" parameter 2 이상 >> hashMap OK 
		parameter 2 이상 >> vo.Notice OK 그래서 param [순서]대로 받는 방법 > String field > 내부에서 
		param1 > String query > 내부에서 param2 ..param3 , param4 .....사용 -->
	<select id="getCount" resultType="Integer">
		SELECT COUNT(*) CNT
		FROM NOTICES
		WHERE ${param1} LIKE '%${param2}%'
	</select>
	<!-- List<Notice> getNotices(int page, String field, String query) 받은 parameter 
		logic 생성 (시작값 , 끝값) int srow = 1 + (page-1)*5; int erow = 5 + (page-1)*5; 
		오라클 쿼리 연산자 활용 : 1 + (${param1}-1)*5 AND 5 + (${param1}-1)*5 parameter : int 
		page, String field, String query param1 , param2 , param3 return : Notice 
		(DTO) -->
	<select id="getNotices" resultType="vo.Notice">
		SELECT * FROM
		( SELECT ROWNUM
		NUM, N.*
		FROM ( SELECT *
		FROM NOTICES
		WHERE ${param2} LIKE '%${param3}%'
		ORDER BY REGDATE DESC) N
		)
		WHERE NUM BETWEEN 1 + (${param1}-1)*5 AND 5 +
		(${param1}-1)*5";
	</select>

	<!-- Notice getNotice(String seq) parameter 1개 생략 가능 : param1 1개 적용(X) -->

	<select id="getNotice" resultType="vo.Notice">
		SELECT
		seq,title,writer,content,regdate,hit,filesrc,filesrc2
		FROM NOTICES
		WHERE SEQ=#{seq}
	</select>

	<!-- int delete(String seq) DELETE NOTICES WHERE SEQ=? DML) Insert, Update, 
		Delete return type(x) -->

	<delete id="delete">
		DELETE NOTICES WHERE SEQ=#{seq}
	</delete>

	<update id="update" parameterType="vo.Notice">
		UPDATE NOTICES
		SET TITLE =#{title},
		CONTENT = #{content},
		FILESRC=#{fileSrc,jdbcType,VARCHAR},
		FILESRC2=#{fileSrc2,jdbcType,VARCHAR}
		WHERE SEQ=?

	</update>

</mapper>



